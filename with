#!/usr/bin/env bash
VERSION=0.0.1

# with tool
# usage: with <program>
# opens an interactive shell instance that automatically prefixes all subsequent commands with program name

# initialise history file

helpmsg="usage: with <program>"
touch /tmp/with_history

function finish {
  # save history to bash history
  if [ -f ~/.bash_history ]; then
    cat /tmp/with_history >> ~/.bash_history
  fi
  rm /tmp/with_history
}

update()
{
  # FIXME: Check versions
  echo "Updating with"
  sudo curl -s https://raw.githubusercontent.com/mchav/with/master/with -o /usr/local/bin/with && sudo chmod +x /usr/local/bin/with
  echo "with successfully updated!"
}

# thanks to /u/Vaphell
drop_with()
{
  if [ ${#prefix[@]} -gt 1  ]
  then
    prefix=( "${prefix[@]:0:${#prefix[@]}-1}" )
  else
    exit 0
  fi
}

add_with()
{
  # separate into white space
  # FIXME: foo "bar baz" should add two elements not one
  IFS=' ' read -r -a parse_array <<< "$@"
  prefix=( "${prefix[@]}" "${parse_array[@]}" )
}

run_with()
{
  while IFS="" read -r -e -d $'\n' -p "$pmpt> " options; do
    history -s "$options" > /dev/null 2>&1

    curr_command="$(echo "$options" | { read -r first rest ; echo "$first" ; })"
    case $curr_command in
      "" )
        # null case: run prefix
        ${prefix[*]} ;;
      "-" )
        # remove with
        drop_with
        pmpt="${prefix[*]}" ;;
      +* )
        # nesting withs
        parsed=${options#"+"}
        add_with "$parsed"
        pmpt="${prefix[*]}" ;;
      :* )
        # shell command
        parsed=${options#":"}
        if [ "$parsed" = "q" ]; then
          exit 0
        fi
        IFS=' ' read -r -a parsed_array <<< "$parsed"
        echo "${parsed_array[@]}" >> /tmp/with_history
        eval "${parsed_array[@]}" ;;
      * )
        # prepend prefix to command
        echo "${prefix[*]} ${options}" >> /tmp/with_history
        eval "${prefix[*]} ${options}"
    esac
  done
}

print_version()
{
  echo "with version:$VERSION"
  exit 0
}

print_help()
{
  echo "with tool"
  echo "$helpmsg"
  echo "opens an interactive shell instance that automatically prefixes all subsequent commands with program name"
  echo "options:"
  echo "	-h, --help: Display this message"
  echo "	-v, --version: Display the currently installed version of with"
  echo "	-u, --update: Check of update"
  exit 0
}

trap finish exit

declare -a prefix
prefix=( "$@" )
pmpt=${prefix[*]}

#add options here, such as -h, -v
case $prefix in
	"" )
	  echo "Missing arguments."
	  echo "$helpmsg"
	  exit 1;;
	"-v" )
	  print_version;;
	"--version" )
	  print_version;;
	"-h" )
	  print_help;;
	"--help" )
	  print_help;;
	"-u" )
	  update;;
	"--update" )
	  update;;
esac

if ! type "$1" > /dev/null 2>&1; then
  echo "error: Program" "$1" "is not installed"
  exit 1
fi

while true ; do
  run_with
done
